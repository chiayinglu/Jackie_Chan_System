#!/usr/bin/env python
# coding: utf-8

# In[ ]:


#In order to fully grasp what is going on please read the annotation.
#Please also open the Flow diagram (). It will make more sense that way :)
#from jurrasicapicall import JurrasicCall  #imports our api call function

input = open("input.txt", "r")
##############################################################################################################################################################################
# From here we are moving into the JurrasicAPI
##############################################################################################################################################################################

from googletrans import Translator                                #Translator from google, which checks what language it is (should be approved first)
detector = Translator()                                           
    
readinput = input.read()
#Sets languagein as the langauge which is used in 'input' 
languagein = detector.detect(readinput)
#prints the detected language                               
print("The detected language is: ", languagein.lang)
#Saves the detected langauge from input
givenlang = languagein.lang



#For the input from the user having to translate it NL-EN
#if the language is english...
if givenlang == "en": 
    #...it will call the Jurrasic API and generate an answer
    exec(open("jurrasicapicall.py").read())
    jurrasicoutput = open("jurrasicoutput.txt", "r")
    jurrasicoutput = jurrasicoutput.read()
        
    print("Jackie Chan Bot: ",jurrasicoutput)
    print("\n")
#If the langauge is something else than english (we assume Dutch)
else:
    #Calls the translation model call (NL-EN), which is hosted on a pc provided by us
    exec(open("oeat-onmtpost.py").read())
    #Opens the output (from our translation) as read
    g = open("Input.txt", "r")   
    #Sets TranslatedInput to the output which was generated by our model
    TranslatedInput = g.read() 
    #Calls the jurassic API
    exec(open("jurrasicapicall.py").read())
    jurrasicoutput = open("jurrasicoutput.txt", "r")
    jurrasicoutput = jurrasicoutput.read()
    print("Output from Jurassic: ", jurrasicoutput)
    

#For output of the system having to translate it EN-NL
if languagein.lang == "en":     
  jurrasicoutput = jurrasicoutput
#When input was dutch, the output has to be translated back to dutch.
else:     
  #Calls the reversed translation model call (EN-NL), which is hosted on a pc provided by us
  exec(open("oeat-onmtpostBack.py").read())                                                                                                 
  f = open("Du-EnOutput.txt", "r")                 
  TranslatedOutputJur = f.read()                                                                                   
  jurrasicoutput = TranslatedOutputJur
  #send to interface       
  print("Jackie Chan Bot: ", jurrasicoutput)
  print("\n")  
       

